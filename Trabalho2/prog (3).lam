let

    true = \a b. a;
    false = \a b. b;
    
    if = \b e1 e2. b e1 e2;

    not = \b. b false true;

    and = \b1 b2. if b1 b2 false;

    or = \b1 b2. if b1 true b2;

    zero = \f x. x; -- pode-se usar 0 por praticidade
    um = \f x. f x; -- 1
    dois = \f x. f (f x); -- 2
    tres = \f x. f (f (f x)); -- 3

    succ = \n. \A B. A (n A B);

    add = \n1 n2. n1 succ n2;
    add2 = \n1 n2. \A B. n1 A (n2 A B);

    mult = \n1 n2. n1 (\x. add n2 x) 0;

    isZero = \n. n (\x. false) true;
    isPos = \n. not (isZero n); 

    pair = \a b. \c. c a b;
    fst = \p. p true;
    snd = \p. p false;

    swap = \p. pair (snd p) (fst p);
    shiftInc = \p. pair (snd p) (succ (snd p));
 
    -- (pred n) calcula n-1 se n>0, n se n=0 
    pred = \n. fst (n shiftInc (pair 0 0));

    -- (sub a b) calcula a - b
    sub = \a b. b pred a;

    -- (menor a b) testa a < b
    menor = \a b. isPos (sub b a);
    
    empty = \x. true;
    cons = pair;

    isEmpty = \l. l (\a b. false);
    head = fst;
    tail = snd;

    --1
    pow = \b.\e.e b;
    pow2 = \b. dois b;

    x3 = \x. mult tres x;

    polinomio = \a. \b. add2 (pow2 a) (x3 b);
    --

    --2
    
    --
    --Menor
    lt = \a. \b. isPos (sub b a);
    --MaiorOuIgual
    geq = \a. \b. not (lt a b);
    --Maior
    gt = \a. \b. isPos(sub a b);
    --MenorOuIgual
    leq = \a. \b. not (gt a b);

    igual = \a. \b. (and (leq a b) (geq a b));

    --1c
    --multQuatro = x;
    sub4 = \a. 4 pred a;
    igual4 = \a. igual a 4;
    maiorQue4 = \a. gt a 4;
    menorQue4 = \a. lt a 4;
    menorIgual4 = \a. geq a 4;
    maiorIgual4 = \a. leq a 4;
    proj1 = \x. if (maiorQue4 x) (proj1 (sub4 x)) (if (igual4 x) true false);
    
   ifThenElse = \a b c . a b c;
   
   igual0 = \a. igual a 0;
   igual1 = \a. igual a 1;
   maiorQue1 = \a. gt a 1;
   pred2 = \a. 2 pred a;


   --I = \n. ifThenElse (maiorQue4 n) (I (sub4 n)) (ifThenElse (igual4 n) true false);
   --I = S I;
   S = \X. \n. ifThenElse (maiorQue4 n) (X (sub4 n)) (ifThenElse (igual4 n) true false);

--combinador Y
Y = \f.(\x.f(x x))(\x.f(x x));

multQuatro = Y S;

 --1d
    invFrac = \p. ifThenElse (igual0 (fst p)) (pair (fst p) (snd p)) (pair (snd p) (fst p));
   -- ex.: invFrac (pair 0 2) == (0,2)
   -- ex.: invFrac (pair 1 2) == (2,1)


--1e
   multFrac = \p1 p2. pair (mult (fst p1) (fst p2)) (mult (snd p1) (snd p2));
   -- ex.: multFrac (pair 2 3) (pair 4 5) == (8,15)


--1f
   somaFrac = \p1 p2. pair (add (mult (fst p1) (snd p2)) (mult (snd p1) (fst p2))) (mult (snd p1) (snd p2));
   -- ex.: somaFrac (pair 2 3) (pair 4 5) == (22,15)


 --1h
     S2 = \X. \n.  ifThenElse (igual0 n) 2 (ifThenElse (igual1 n) 1 (add (X (pred n)) (X (pred2 n))));
    lucas = Y S2;
    --ex.: lucas 0 == 2
    --ex.: lucas 1 == 1
    --ex.: lucas 2 == 3


in
    
    lucas 2